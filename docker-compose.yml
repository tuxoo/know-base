version: "3.5"

services:
  postgres-kbase:
    container_name: postgres-kbase
    image: postgres:${POSTGRES_VERSION}
    restart: on-failure
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
    volumes:
      - ./.docker-volumes/postgres:/var/lib/postgresql/data
      - ./postgres/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      kbase-net:
        ipv4_address: 172.28.1.1

  liquibase-kbase:
    container_name: liquibase-kbase
    image: liquibase/liquibase:${LIQUIBASE_VERSION}
    restart: on-failure
    command: --defaultsFile=liquibase.properties update
    depends_on:
      - postgres-kbase
    volumes:
      - ./db/:/liquibase/changelog/
      - ./db/:/liquibase/classpath/
      - ./db/liquibase.properties:/liquibase/liquibase.properties
    networks:
      kbase-net:
        ipv4_address: 172.28.1.2

  grafana-kbase:
    container_name: grafana-kbase
    image: grafana/grafana:${GRAFANA_VERSION}
    restart: on-failure
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./grafana:/etc/grafana/provisioning
      - ./.docker-volumes/grafana:/var/lib/grafana
    ports:
      - ${GRAFANA_PORT}:3000
    networks:
      kbase-net:
        ipv4_address: 172.28.1.3

  prometheus-kbase:
    container_name: prometheus-kbase
    image: prom/prometheus:${PROMETHEUS_VERSION}
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./.docker-volumes/prometheus:/prometheus
    ports:
      - ${PROMETHEUS_PORT}:9090
    networks:
      kbase-net:
        ipv4_address: 172.28.1.4

  minio-kbase:
    image: minio/minio
    container_name: minio-kbase
    restart: on-failure
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    command: minio server --console-address ":9001" /data
    ports:
      - ${MINIO_PORT}:9000
      - ${MINIO_PORT_1}:9001
    volumes:
      - ./.docker-volumes/minio:/data
    networks:
      kbase-net:
        ipv4_address: 172.28.1.5

  kbase-gateway-service:
    container_name: kbase-gateway-service
    build: know-base-gateway-service
    restart: on-failure
    env_file:
      - .env
    depends_on:
      - kbase-service
    ports:
      - ${GATEWAY_PORT}:8080
    networks:
      kbase-net:
        ipv4_address: 172.28.1.6

  kbase-service:
    container_name: kbase-service
    build: know-base-service
    restart: on-failure
    env_file:
      - .env
    depends_on:
      - postgres-kbase
    ports:
      - ${SERVICE_PORT}:8081
    networks:
      kbase-net:
        ipv4_address: 172.28.1.7

  kbase-storage:
    container_name: kbase-storage
    build: know-base-storage-service
    restart: on-failure
    env_file:
      - .env
    ports:
      - ${STORAGE_PORT}:8082
    networks:
      kbase-net:
        ipv4_address: 172.28.1.8

networks:
  kbase-net:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
